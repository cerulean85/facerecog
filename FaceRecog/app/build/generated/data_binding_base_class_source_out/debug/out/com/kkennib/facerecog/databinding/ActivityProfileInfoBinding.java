// Generated by view binder compiler. Do not edit!
package com.kkennib.facerecog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kkennib.facerecog.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivEnrolledUserProfile;

  @NonNull
  public final TextView lbEnrollInfo;

  @NonNull
  public final TextView tvEnrolledName;

  @NonNull
  public final TextView tvEnrolledUuid;

  private ActivityProfileInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ivEnrolledUserProfile, @NonNull TextView lbEnrollInfo,
      @NonNull TextView tvEnrolledName, @NonNull TextView tvEnrolledUuid) {
    this.rootView = rootView;
    this.ivEnrolledUserProfile = ivEnrolledUserProfile;
    this.lbEnrollInfo = lbEnrollInfo;
    this.tvEnrolledName = tvEnrolledName;
    this.tvEnrolledUuid = tvEnrolledUuid;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_enrolled_user_profile;
      ImageView ivEnrolledUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (ivEnrolledUserProfile == null) {
        break missingId;
      }

      id = R.id.lb_enroll_info;
      TextView lbEnrollInfo = ViewBindings.findChildViewById(rootView, id);
      if (lbEnrollInfo == null) {
        break missingId;
      }

      id = R.id.tv_enrolled_name;
      TextView tvEnrolledName = ViewBindings.findChildViewById(rootView, id);
      if (tvEnrolledName == null) {
        break missingId;
      }

      id = R.id.tv_enrolled_uuid;
      TextView tvEnrolledUuid = ViewBindings.findChildViewById(rootView, id);
      if (tvEnrolledUuid == null) {
        break missingId;
      }

      return new ActivityProfileInfoBinding((ConstraintLayout) rootView, ivEnrolledUserProfile,
          lbEnrollInfo, tvEnrolledName, tvEnrolledUuid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
